buildscript {

	ext.kotlinVersion        = '1.1.2-5'
	ext.junitPlatformVersion = '1.0.0-M4'
	ext.junitJupiterVersion  = '5.0.0-M4'
	ext.junitVintageVersion  = '4.12.0-M4'
	ext.junit4Version        = '4.12'
	ext.spekVersion          = '1.1.2'
	ext.log4jVersion         = '2.6.2'
	ext.springBootVersion 	 = '1.5.4.RELEASE'
	ext.springVersion        = '5.0.0.M5' // need to update to 5.0.0 when it comes out

	repositories {
		mavenCentral()
	}

	dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.junit.platform:junit-platform-gradle-plugin:${junitPlatformVersion}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
	}
}

repositories {
    mavenCentral()
    maven { url "http://dl.bintray.com/jetbrains/spek" }
    maven { url "http://repo.spring.io/milestone" }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'

// Would be needed to create a JAR
//jar {
//	baseName = 'project-name'
//	version = '1.0.0-SNAPSHOT'
//}

compileTestJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	options.compilerArgs += '-parameters'
}

mainClassName = 'com.example.project.MySpringApplicationKt'

junitPlatform {
	filters {
		engines {}
		tags { exclude 'slow' }
	}
}

// Currently doesn't work, but would like to see better logging
// test {
//   testLogging { events 'started', 'passed' }
// }

dependencies {
	compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
	compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"

    compile 'org.springframework.boot:spring-boot-starter-web'

    // not entirely sure which of these is needed yet
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-test:$springVersion"
    compile "org.springframework:spring-expression:$springVersion"
    compile "org.springframework:spring-web:$springVersion"
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-beans:$springVersion"
    compile "org.springframework:spring-aop:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"

    testCompile('org.springframework.boot:spring-boot-starter-test:2.0.0.M2') {
        exclude group: 'org.springframework', module: 'spring-core'
        exclude group: 'org.springframework', module: 'spring-test'
        exclude group: 'junit', module: 'junit'
    }

	testCompile "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
	testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"

	// For support of legacy JUnit 3 and 4 tests
	testCompile "junit:junit:${junit4Version}"
	testRuntime "org.junit.vintage:junit-vintage-engine:${junitVintageVersion}"

	testRuntime "org.apache.logging.log4j:log4j-core:${log4jVersion}"
	testRuntime "org.apache.logging.log4j:log4j-jul:${log4jVersion}"

	testCompile("org.jetbrains.spek:spek-api:${spekVersion}") {
		// exclude kotlin from spek, so that we can use the newest version
		exclude group: 'org.jetbrains.kotlin'
	}
	testRuntime("org.jetbrains.spek:spek-junit-platform-engine:${spekVersion}") {
		// exclude junit and kotlin from the engine, so we can use our own versions
		exclude group: 'org.junit.platform'
		exclude group: 'org.jetbrains.kotlin'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.5'
}
